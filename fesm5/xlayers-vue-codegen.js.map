{"version":3,"file":"xlayers-vue-codegen.js","sources":["ng://@xlayers/vue-codegen/lib/vue-docgen.service.ts","ng://@xlayers/vue-codegen/lib/vue-aggregator.service.ts","ng://@xlayers/vue-codegen/lib/vue-codegen.service.ts","ng://@xlayers/vue-codegen/lib/vue-codegen.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VueDocGenService {\r\n  aggregate(data: SketchMSData) {\r\n    return [\r\n      {\r\n        uri: 'README.md',\r\n        value: this.renderReadme(data.meta.app),\r\n        language: 'markdown',\r\n        kind: 'text'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderReadme(name: string) {\r\n    return `\\\r\n## How to use the ${name} Vue module\r\n\r\n1. Download and extract the exported module into your workspace,\r\n\r\n2. Import the component into your App component or other container.\r\n\\`\\`\\`\r\n<template>\r\n  <div id=\"app\">\r\n    <MyComponent />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MyComponent from \\'./components/MyComponent.vue\\'\r\n\r\nexport default {\r\n  name: \\'app\\\r\n  components: {\r\n    MyComponent\r\n  }\r\n}\r\n</script>\r\n\\`\\`\\`\r\n\r\n3. Enjoy.`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormatService } from '@xlayers/sketch-lib';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VueAggregatorService {\r\n  constructor(\r\n    private readonly formatService: FormatService,\r\n    private readonly webCodeGenService: WebCodeGenService\r\n  ) {}\r\n\r\n  aggregate(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const fileName = this.formatService.normalizeName(current.name);\r\n    const files = this.webCodeGenService.aggregate(current, data, options);\r\n    const html = files.find(file => file.language === 'html');\r\n    const css = files.find(file => file.language === 'css');\r\n\r\n    return [\r\n      {\r\n        kind: 'vue',\r\n        value: this.renderSpec(current, options),\r\n        language: 'javascript',\r\n        uri: `${options.componentDir}/${fileName}.spec.js`\r\n      },\r\n      {\r\n        kind: 'vue',\r\n        value: this.renderComponent(current, html.value, css.value),\r\n        language: 'html',\r\n        uri: `${options.componentDir}/${fileName}.vue`\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderComponent(current: SketchMSLayer, html: string, css: string) {\r\n    return `\\\r\n<template>\r\n${html}\r\n</template>\r\n\r\n<script>\r\n${this.renderScript(current)}\r\n</script>\r\n\r\n<style>\r\n${css}\r\n</style>`;\r\n  }\r\n\r\n  private renderScript(current: SketchMSLayer) {\r\n    const importStatements = this.renderImportStatements(current);\r\n    if (importStatements.length > 0) {\r\n      const importDeclarations = this.generateVueImportDeclaration(current)\r\n        .map(declaration => this.formatService.indent(2, declaration))\r\n        .join('\\n');\r\n      return `\\\r\n${importStatements}\r\n\r\nexport default {\r\n  components: {\r\n${importDeclarations}\r\n  }\r\n}`;\r\n    }\r\n\r\n    return 'export default {}';\r\n  }\r\n\r\n  private renderSpec(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    const className = this.formatService.className(current.name);\r\n    const fileName = this.formatService.className(current.name);\r\n\r\n    return `\\\r\nimport { shallowMount } from \"@vue/test-utils\";\r\nimport ${className} from \"./${options.componentDir}/${fileName}\";\r\n\r\ndescribe(\"${className}\", () => {\r\n  it(\"render\", () => {\r\n    const wrapper = shallowMount(${className}, {});\r\n    expect(wrapper.isVueInstance()).toBeTruthy();\r\n  });\r\n});\r\n];`;\r\n  }\r\n\r\n  private renderImportStatements(current: SketchMSLayer) {\r\n    return [\r\n      'import { Component } from \\'@stencil/core\\';',\r\n      ...this.generateDynamicImport(current)\r\n    ].join('\\n');\r\n  }\r\n\r\n  private generateDynamicImport(current: SketchMSLayer) {\r\n    const context = this.webCodeGenService.context(current);\r\n    return context && context.components\r\n      ? context.components.map(component => {\r\n          const importclassName = this.formatService.className(component);\r\n          const importFileName = this.formatService.normalizeName(component);\r\n          return `import { ${importclassName} } from \"./${importFileName}\"; `;\r\n        })\r\n      : [];\r\n  }\r\n\r\n  private generateVueImportDeclaration(current: SketchMSLayer) {\r\n    const context = this.webCodeGenService.context(current);\r\n    return context && context.components\r\n      ? context.components.map(component =>\r\n          this.formatService.className(component)\r\n        )\r\n      : [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ImageService, SymbolService, LayerService } from '@xlayers/sketch-lib';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\nimport { VueAggregatorService } from './vue-aggregator.service';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VueCodeGenService {\r\n  constructor(\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly webCodeGen: WebCodeGenService,\r\n    private readonly angularAggretatorService: VueAggregatorService,\r\n    private readonly layerService: LayerService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    this.webCodeGen.compute(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  aggregate(data: SketchMSData, options?: WebCodeGenOptions) {\r\n    return data.pages.flatMap(page =>\r\n      this.visit(page, data, this.compileOptions(options))\r\n    );\r\n  }\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return this.webCodeGen.identify(current);\r\n  }\r\n\r\n  context(current: SketchMSLayer) {\r\n    return this.webCodeGen.context(current);\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    return this.visitContent(current, data, options).concat(\r\n      this.angularAggretatorService.aggregate(current, data, options)\r\n    );\r\n  }\r\n\r\n  private visitContent(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      return this.visitLayer(current, data, options);\r\n    } else if (this.symbolService.identify(current)) {\r\n      return this.visitSymbolMaster(current, data, options);\r\n    } else if (this.imageService.identify(current)) {\r\n      return this.imageService.aggregate(current, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private visitLayer(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    return this.layerService\r\n      .lookup(current)\r\n      .flatMap(layer => this.visitContent(layer, data, options));\r\n  }\r\n\r\n  private visitSymbolMaster(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      return this.visit(symbolMaster, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private compileOptions(options: WebCodeGenOptions) {\r\n    return {\r\n      textTagName: 'span',\r\n      bitmapTagName: 'img',\r\n      blockTagName: 'div',\r\n      xmlPrefix: 'xly-',\r\n      cssPrefix: 'xly_',\r\n      componentDir: 'components',\r\n      assetDir: 'assets',\r\n      ...options\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { WebCodeGenModule } from '@xlayers/web-codegen';\r\n\r\n@NgModule({\r\n  imports: [WebCodeGenModule]\r\n})\r\nexport class VueCodeGenModule {}\r\n"],"names":["tslib_1.__spread"],"mappings":"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"}